// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopApp.Entities;

#nullable disable

namespace ShopApp.Migrations
{
    [DbContext(typeof(ShopAppContext))]
    [Migration("20250129053759_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShopApp.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<string>("PromoCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1ab33be-cd77-4904-9859-f8714c69bd34"),
                            PromoCode = "Sale1",
                            Total = 50.00m,
                            UserName = "petrov2"
                        },
                        new
                        {
                            Id = new Guid("870e2f1e-e06f-4877-b90f-3e33e8b7ed83"),
                            OrderId = new Guid("6dc7864f-1cdf-4458-aec3-521bd5a8336c"),
                            PromoCode = "Promo_Test1",
                            Total = 123.11m,
                            UserName = "ivan1"
                        },
                        new
                        {
                            Id = new Guid("bb0a0d79-79cd-474a-bbec-a3ac899827a2"),
                            OrderId = new Guid("3f46a3a1-7d10-48ca-b7f7-d1ee1a000358"),
                            PromoCode = "J1N",
                            Total = 80m,
                            UserName = "pet2"
                        },
                        new
                        {
                            Id = new Guid("f171504b-fce1-46d8-a44b-6e7f545a875e"),
                            OrderId = new Guid("4f7e9fe7-b11d-44f1-ac66-2b2f8637c328"),
                            PromoCode = "Promo_Test1",
                            Total = 90m,
                            UserName = "ivanov3"
                        },
                        new
                        {
                            Id = new Guid("c88df46f-8924-4cab-8d4d-9f67299aaf3d"),
                            OrderId = new Guid("47f5bb79-4112-4e6a-9336-2f9d35a1b06d"),
                            PromoCode = "Free",
                            Total = 90m,
                            UserName = "dog1"
                        },
                        new
                        {
                            Id = new Guid("59c2fa95-4ef3-4299-8468-b4c43f9cfd72"),
                            OrderId = new Guid("271313ab-bace-4132-8564-f7faf9e64bb4"),
                            PromoCode = "Promo_Test1",
                            Total = 100m,
                            UserName = "dog1"
                        },
                        new
                        {
                            Id = new Guid("e87d21d1-96dc-436e-92a6-283884af589e"),
                            OrderId = new Guid("5956302c-6aa6-43de-afd1-0b527473f933"),
                            PromoCode = "Free",
                            Total = 100m,
                            UserName = "ivan2"
                        },
                        new
                        {
                            Id = new Guid("929644b5-66d9-48d2-8955-b10f64c72961"),
                            OrderId = new Guid("ec40d1d6-0b96-431a-98de-58ab42ff5488"),
                            PromoCode = "Next",
                            Total = 60m,
                            UserName = "petrov3"
                        },
                        new
                        {
                            Id = new Guid("7e04bc7b-d205-4f9b-a21b-d71a241db55c"),
                            OrderId = new Guid("e40e3199-6e85-405a-b0d7-6bea67bf8afd"),
                            PromoCode = "Last",
                            Total = 70m,
                            UserName = "ivan2"
                        });
                });

            modelBuilder.Entity("ShopApp.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8cd310d-1e52-44e1-b6b7-478a682c80cb"),
                            CartId = new Guid("f1ab33be-cd77-4904-9859-f8714c69bd34"),
                            Count = 5,
                            Name = "Ластик",
                            Price = 10.00m
                        },
                        new
                        {
                            Id = new Guid("fd2efbd8-7969-4210-a283-760b6d63779b"),
                            CartId = new Guid("870e2f1e-e06f-4877-b90f-3e33e8b7ed83"),
                            Count = 1,
                            Name = "Карандаш",
                            Price = 23.11m
                        },
                        new
                        {
                            Id = new Guid("7eb24925-b00f-4c90-9a78-f465be9e3669"),
                            CartId = new Guid("870e2f1e-e06f-4877-b90f-3e33e8b7ed83"),
                            Count = 2,
                            Name = "Тетрадь",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = new Guid("6f7a011a-003e-48e2-9c32-4643f238d8b7"),
                            CartId = new Guid("bb0a0d79-79cd-474a-bbec-a3ac899827a2"),
                            Count = 1,
                            Name = "Стол",
                            Price = 80.00m
                        },
                        new
                        {
                            Id = new Guid("6b4fe1ae-e223-422d-a0dd-1d9782ac7548"),
                            CartId = new Guid("f171504b-fce1-46d8-a44b-6e7f545a875e"),
                            Count = 1,
                            Name = "Тетрадь",
                            Price = 90.00m
                        },
                        new
                        {
                            Id = new Guid("73c2742d-2201-431d-8197-62bb7e357495"),
                            CartId = new Guid("c88df46f-8924-4cab-8d4d-9f67299aaf3d"),
                            Count = 1,
                            Name = "Линейка",
                            Price = 90.00m
                        },
                        new
                        {
                            Id = new Guid("8412671e-997c-4214-a53e-9b266ded9158"),
                            CartId = new Guid("e87d21d1-96dc-436e-92a6-283884af589e"),
                            Count = 1,
                            Name = "Пластилин",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = new Guid("7b41da5a-0738-49c0-8db0-ac81c712c860"),
                            CartId = new Guid("e87d21d1-96dc-436e-92a6-283884af589e"),
                            Count = 1,
                            Name = "Стул",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = new Guid("9839e221-f9e5-4a2a-8d7f-29dc4c5d594e"),
                            CartId = new Guid("929644b5-66d9-48d2-8955-b10f64c72961"),
                            Count = 1,
                            Name = "Атлас",
                            Price = 60.00m
                        },
                        new
                        {
                            Id = new Guid("b2a91a99-6cf6-48ed-a281-f0001299e84a"),
                            CartId = new Guid("7e04bc7b-d205-4f9b-a21b-d71a241db55c"),
                            Count = 1,
                            Name = "Карандаш",
                            Price = 20.00m
                        },
                        new
                        {
                            Id = new Guid("4092421e-2500-430e-b1cd-95139a9b2121"),
                            CartId = new Guid("7e04bc7b-d205-4f9b-a21b-d71a241db55c"),
                            Count = 1,
                            Name = "Пластилин",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = new Guid("5528c8c3-cfa5-4fb7-9cdf-2d287a444435"),
                            CartId = new Guid("59c2fa95-4ef3-4299-8468-b4c43f9cfd72"),
                            Count = 1,
                            Name = "Комод",
                            Price = 100.00m
                        });
                });

            modelBuilder.Entity("ShopApp.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique();

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6dc7864f-1cdf-4458-aec3-521bd5a8336c"),
                            CartId = new Guid("870e2f1e-e06f-4877-b90f-3e33e8b7ed83"),
                            Status = "Init"
                        },
                        new
                        {
                            Id = new Guid("3f46a3a1-7d10-48ca-b7f7-d1ee1a000358"),
                            CartId = new Guid("bb0a0d79-79cd-474a-bbec-a3ac899827a2"),
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("4f7e9fe7-b11d-44f1-ac66-2b2f8637c328"),
                            CartId = new Guid("f171504b-fce1-46d8-a44b-6e7f545a875e"),
                            Status = "Refunded"
                        },
                        new
                        {
                            Id = new Guid("47f5bb79-4112-4e6a-9336-2f9d35a1b06d"),
                            CartId = new Guid("c88df46f-8924-4cab-8d4d-9f67299aaf3d"),
                            Status = "Paid"
                        },
                        new
                        {
                            Id = new Guid("271313ab-bace-4132-8564-f7faf9e64bb4"),
                            CartId = new Guid("59c2fa95-4ef3-4299-8468-b4c43f9cfd72"),
                            Status = "Fail"
                        },
                        new
                        {
                            Id = new Guid("5956302c-6aa6-43de-afd1-0b527473f933"),
                            CartId = new Guid("e87d21d1-96dc-436e-92a6-283884af589e"),
                            Status = "Init"
                        },
                        new
                        {
                            Id = new Guid("ec40d1d6-0b96-431a-98de-58ab42ff5488"),
                            CartId = new Guid("929644b5-66d9-48d2-8955-b10f64c72961"),
                            Status = "Init"
                        },
                        new
                        {
                            Id = new Guid("e40e3199-6e85-405a-b0d7-6bea67bf8afd"),
                            CartId = new Guid("7e04bc7b-d205-4f9b-a21b-d71a241db55c"),
                            Status = "Refunded"
                        });
                });

            modelBuilder.Entity("ShopApp.Entities.CartItem", b =>
                {
                    b.HasOne("ShopApp.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ShopApp.Entities.Order", b =>
                {
                    b.HasOne("ShopApp.Entities.Cart", "Cart")
                        .WithOne("Order")
                        .HasForeignKey("ShopApp.Entities.Order", "CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ShopApp.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
